# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-artifacts:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Build
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.15.1'

      - run: yarn
      - run: yarn build

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6
      
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v2
        if: matrix.platform == 'windows-latest'
        with:
          name: windows
          path: |
            release/${{ steps.extract_version.outputs.version }}/Lindo-${{ steps.extract_version.outputs.version }}-win.zip
            release/${{ steps.extract_version.outputs.version }}/Lindo ${{ steps.extract_version.outputs.version }}.exe
            release/${{ steps.extract_version.outputs.version }}/Lindo Setup ${{ steps.extract_version.outputs.version }}.exe
      
      - name: Upload MacOS artifacts
        uses: actions/upload-artifact@v2
        if: matrix.platform == 'macos-latest'
        with:
          name: macos
          path: |
            release/${{ steps.extract_version.outputs.version }}/Lindo-${{ steps.extract_version.outputs.version }}.dmg

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v2
        if: matrix.platform == 'linux-latest'
        with:
          name: linux
          path: |
            release/${{ steps.extract_version.outputs.version }}/Lindo-${{ steps.extract_version.outputs.version }}.AppImage
            release/${{ steps.extract_version.outputs.version }}/lindo-${{ steps.extract_version.outputs.version }}.tar.gz
            release/${{ steps.extract_version.outputs.version }}/lindo-${{ steps.extract_version.outputs.version }}_amd64.deb

  create-release:
    name: "Upload Release"
    runs-on: ubuntu-latest
    needs: [build-artifacts]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2

      - name: Display structure of downloaded files
        run: ls -R

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6

      - name: Automatic Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          draft: true
          automatic_release_tag: "v${{ steps.extract_version.outputs.version }}"
          title: "v${{ steps.extract_version.outputs.version }}"
          files: |
            win/Lindo ${{ steps.extract_version.outputs.version }}.exe
            win/Lindo Setup ${{ steps.extract_version.outputs.version }}.exe
            win/Lindo-${{ steps.extract_version.outputs.version }}-win.zip
            win/Lindo-${{ steps.extract_version.outputs.version }}-ia32-win.zip
            lin/lindo-${{ steps.extract_version.outputs.version }}.tar.gz
            lin/lindo_${{ steps.extract_version.outputs.version }}_amd64.deb
            mac/Lindo-${{ steps.extract_version.outputs.version }}.dmg
            mac/Lindo-${{ steps.extract_version.outputs.version }}-mac.zip

